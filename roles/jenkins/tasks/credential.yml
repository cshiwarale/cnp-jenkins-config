---
- name: Render {{ credential.id }} credential
  template:
    src: "create-credential.groovy"
    dest: "/tmp/jenkins-credentials/{{ credential.id }}.groovy"
    mode: 0700
    owner: "{{ jenkins_process_user }}"
    group: "{{ jenkins_process_group }}"
  register: credential_template_task

#- name: Configure credential
#  shell: >
#    {{ jenkins_role_cli_command }} groovy = < "/tmp/jenkins-credentials/{{ credential.id }}.groovy"
#  args:
#    warn: no
#  become: yes
#  become_user: "{{ jenkins_process_user }}"
#  when: credential_template_task.changed

- name: Install Jenkins cedential using password.
  jenkins_script:
    script: '/tmp/jenkins-credentials/{{ credential.id }}.groovy'
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password }}"
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
    validate_certs: no
  become: yes
  become_user: "{{jenkins_process_user}}"
  when: credential_template_task.changed

#- name: Install Jenkins cedential using password.
#  jenkins_plugin:
#    name: "{{ item }}"
#    jenkins_home: "{{ jenkins_home }}"
#    params:
#      url_username: "{{ jenkins_admin_username }}"
#      url_password: "{{ jenkins_admin_password }}"
#    state: "{{ jenkins_plugins_state }}"
#    timeout: "{{ jenkins_plugin_timeout }}"
#    updates_expiration: "{{ jenkins_plugin_updates_expiration }}"
#    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}"
#  with_items: "{{ jenkins_plugins }}"
#  when: jenkins_admin_password != ""
#  notify: restart jenkins
#  retries: 10
#  delay: 5
#  ignore_errors: yes
#  become: yes
#  become_user: "{{jenkins_process_user}}"
