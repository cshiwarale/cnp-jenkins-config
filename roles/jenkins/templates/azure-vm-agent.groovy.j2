#!groovy
import com.microsoft.azure.vmagent.builders.*;
import jenkins.model.Jenkins;

def myCloud = new AzureVMCloudBuilder()
.withCloudName("{{ jenkins_agent_cloud_name }}")
.withAzureCredentialsId("{{ jenkins_agent_azure_sp_id }}")
.withExistingResourceGroupName("mgmt-vmimg-store-{{ jenkins_agent_env }}")
.withMaxVirtualMachinesLimit("{{ jenkins_agent_vm_limit }}")
.withDeploymentTimeout("{{ jenkins_agent_deployment_timeout }}")
.addNewTemplate()
    .withName("{{ jenkins_agent_template_name }}")
    .withLabels("{{ jenkins_agent_labels }}")
    .withDescription("Jenkins build agents for MoJ")
    .withWorkspace("{{ jenkins_home }}")
    .withLocation("{{ jenkins_agent_location }}")
    .withVirtualMachineSize("{{ jenkins_agent_machine_size }}")
    .withExistingStorageAccount("mgmtvmimgstore{{ jenkins_agent_env }}")
    .withStorageAccountType("{{jenkins_agent_storage_type}}")
    .addNewAdvancedImage()
        .withCustomImage("{{ jenkins_agent_image_uri }}")
        .withOsType("Linux")
        .withLaunchMethod("SSH")
        .withInitScript("usermod -a -G docker {{ jenkins_agent_user }}\numount /mnt/resource\nmkdir -pv {{ jenkins_home }}\nmount /dev/sdb1 {{ jenkins_home }}\nchown -R {{ jenkins_agent_user }}:{{ jenkins_agent_user }} {{ jenkins_home }}\nmv /tmp/jenkinsssh_id_rsa /home/{{ jenkins_agent_user }}/.ssh/id_rsa\nchown {{ jenkins_agent_user }}:{{ jenkins_agent_user }} /home/{{ jenkins_agent_user }}/.ssh/id_rsa\nchmod 0600 /home/{{ jenkins_agent_user }}/.ssh/id_rsa\nmv /tmp/vault-token /home/{{ jenkins_agent_user }}/.vault-token\nchown -R {{ jenkins_agent_user }}:{{ jenkins_agent_user }} /home/{{ jenkins_agent_user }}/.vault-token\nchmod 0600 /home/{{ jenkins_agent_user }}/.vault-token\ncat > /etc/dnsmasq.d/10-internal-forwarding<<EOF\nserver=/internal/{{ ansible_eth0.ipv4.address }}\nserver=/reform.hmcts.net/172.16.0.10\nEOF")
        .withRunScriptAsRoot(true)
        .withDoNotUseMachineIfInitFails(true)
        .withVirtualNetworkName("{{ jenkins_agent_virtual_net }}")
        .withVirtualNetworkResourceGroupName("{{ jenkins_agent_net_rg }}")
        .withSubnetName("{{ jenkins_agent_subnet }}")
        .withUsePrivateIP(true)
        .withNumberOfExecutors("{{ jenkins_agent_executors }}")
    .endAdvancedImage()
    .withAdminCredential("{{ jenkins_agent_vm_creds }}")
.endTemplate()
.build();

Jenkins.getInstance().clouds.add(myCloud);
