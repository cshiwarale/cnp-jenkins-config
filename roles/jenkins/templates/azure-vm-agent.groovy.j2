#!groovy
import com.microsoft.azure.vmagent.builders.*;
import jenkins.model.Jenkins;

def myCloud = new AzureVMCloudBuilder()
.withCloudName("moj-azure")
.withAzureCredentialsId("jenkinsServicePrincipal")
.withExistingResourceGroupName("mgmt-vmimg-store-lpdev")
.withMaxVirtualMachinesLimit("3")
.withDeploymentTimeout("1200")
.addNewTemplate()
    .withName("moj-jenkins-builders")
    .withLabels("jenkins-workers")
    .withLocation("UK South")
    .withVirtualMachineSize("Standard_DS11_v2")
    .withExistingStorageAccount("mgmtvmimgstorelpdev")
    .addNewAdvancedImage()
        .withCustomImage("https://mgmtvmimgstorelpdev.blob.core.windows.net/system/Microsoft.Compute/Images/centos-7-4-x86-64-2017-11-13-1/moj-osDisk.3cf7dc0e-ca28-472c-8698-15443dad0de2.vhd")
        .withOsType("Linux")
        .withLaunchMethod("SSH")
        .withInitScript("
        cat /etc/yum.repos.d/yarn.repo <<EOF
        [yarn]
        name=Yarn Repository
        baseurl=https://dl.yarnpkg.com/rpm/
        enabled=1
        gpgcheck=1
        gpgkey=https://dl.yarnpkg.com/rpm/pubkey.gpg
        EOF
        yum install -y java-1.8.0-openjdk-headless java-1.8.0-openjdk docker maven git yarn curl libselinux-python initscripts which nodejs rpmdevtools gettext python-jenkins
        ")
        .withRunScriptAsRoot(true)
        .withDoNotUseMachineIfInitFails(true)
    .endAdvancedImage()
    .withAdminCredential("vm_agent_creds")
.endTemplate()
.build();

Jenkins.getInstance().clouds.add(myCloud);