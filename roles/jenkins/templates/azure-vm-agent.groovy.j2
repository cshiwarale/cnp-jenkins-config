#!groovy
import com.microsoft.azure.vmagent.builders.*;
import jenkins.model.Jenkins;

def myCloud = new AzureVMCloudBuilder()
.withCloudName("{{ jenkins_agent_cloud_name }}")
.withAzureCredentialsId("{{ jenkins_agent_azure_sp_id }}")
.withExistingResourceGroupName("{{ jenkins_agent_resource_group }}")
.withMaxVirtualMachinesLimit("{{ jenkins_agent_vm_limit }}")
.withDeploymentTimeout("{{ jenkins_agent_deployment_timeout }}")
.addNewTemplate()
    .withName("{{ jenkins_agent_template_name }}")
    .withLabels("{{ jenkins_agent_labels }}")
    .withLocation("{{ location }}")
    .withVirtualMachineSize("{{ jenkins_agent_machine_size }}")
    .withExistingStorageAccount("{{ jenkins_agent_storage_account }}")
    .addNewAdvancedImage()
        .withCustomImage("{{ vm_image_id }}")
        .withOsType("Linux")
        .withLaunchMethod("SSH")
        .withInitScript("cat /etc/yum.repos.d/yarn.repo <<EOF\n[yarn]\nname=Yarn Repository\nbaseurl=https://dl.yarnpkg.com/rpm/\nenabled=1\ngpgcheck=1\ngpgkey=https://dl.yarnpkg.com/rpm/pubkey.gpg\nEOF\nyum install -y java-1.8.0-openjdk-headless java-1.8.0-openjdk docker maven git yarn curl libselinux-python initscripts which nodejs rpmdevtools gettext python-jenkins")
        .withRunScriptAsRoot(true)
        .withDoNotUseMachineIfInitFails(true)
    .endAdvancedImage()
    .withAdminCredential("{{ jenkins_agent_vm_creds }}")
.endTemplate()
.build();

Jenkins.getInstance().clouds.add(myCloud);