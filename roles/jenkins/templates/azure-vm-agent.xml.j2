<?xml version='1.1' encoding='UTF-8'?>
<clouds>
  <com.microsoft.azure.vmagent.AzureVMCloud plugin="azure-vm-agents@0.6.2">
    <name>{{ jenkins_agent_cloud_name }}</name>
    <cloudName>{{ jenkins_agent_cloud_name }}</cloudName>
    <credentialsId>{{ jenkins_agent_azure_sp_id }}</credentialsId>
    <maxVirtualMachinesLimit>3</maxVirtualMachinesLimit>
    <resourceGroupReferenceType>existing</resourceGroupReferenceType>
    <newResourceGroupName></newResourceGroupName>
    <existingResourceGroupName>mgmt-vmimg-store-{{ jenkins_agent_env }}</existingResourceGroupName>
    <vmTemplates>
      <com.microsoft.azure.vmagent.AzureVMAgentTemplate>
        <templateName>{{ jenkins_agent_template_name }}</templateName>
        <templateDesc>Jenkins build agents for MoJ</templateDesc>
        <labels>{{ jenkins_agent_labels }}</labels>
        <location>{{ jenkins_agent_location }}</location>
        <virtualMachineSize>{{ jenkins_agent_machine_size }}</virtualMachineSize>
        <storageAccountNameReferenceType>existing</storageAccountNameReferenceType>
        <diskType>managed</diskType>
        <existingStorageAccountName>mgmtvmimgstore{{ jenkins_agent_env }}</existingStorageAccountName>
        <storageAccountType>{{jenkins_agent_storage_type}}</storageAccountType>
        <noOfParallelJobs>{{ jenkins_agent_executors }}</noOfParallelJobs>
        <usageMode>NORMAL</usageMode>
        <shutdownOnIdle>false</shutdownOnIdle>
        <imageTopLevelType>advanced</imageTopLevelType>
        <imageReferenceType>custom</imageReferenceType>
        <builtInImage>Windows Server 2016</builtInImage>
        <isInstallGit>false</isInstallGit>
        <isInstallMaven>false</isInstallMaven>
        <isInstallDocker>false</isInstallDocker>
        <image>{{ jenkins_agent_image_uri }}</image>
        <osType>Linux</osType>
        <imageVersion>latest</imageVersion>
        <agentLaunchMethod>SSH</agentLaunchMethod>
        <preInstallSsh>true</preInstallSsh>
        <initScript>
mkdir -pv {{ jenkins_home }}
chown -R {{ jenkins_agent_user }}:{{ jenkins_agent_user }} {{ jenkins_home }}
cat &gt;/etc/yum.repos.d/yarn.repo &lt;&lt;EOF
[yarn]
name=Yarn Repository
baseurl=https://dl.yarnpkg.com/rpm/
enabled=1
gpgcheck=1
gpgkey=https://dl.yarnpkg.com/rpm/pubkey.gpg
EOF
yum update -y
yum install -y java-1.8.0-openjdk-headless java-1.8.0-openjdk docker maven git yarn curl libselinux-python initscripts which nodejs rpmdevtools gettext python-jenkins
curl https://releases.hashicorp.com/terraform/0.11.0/terraform_0.11.0_linux_amd64.zip -o /tmp/terraform_0.11.0_linux_amd64.zip &amp;&amp; unzip -d /usr/bin /tmp/terraform_0.11.0_linux_amd64.zip &amp;&amp; rm -f /tmp/terraform_0.11.0_linux_amd64.zip
        </initScript>
        <credentialsId>{{ jenkins_agent_vm_creds }}</credentialsId>
        <agentWorkspace>{{ jenkins_home }}</agentWorkspace>
        <retentionTimeInMin>0</retentionTimeInMin>
        <virtualNetworkName>{{ jenkins_agent_virtual_net }}</virtualNetworkName>
        <virtualNetworkResourceGroupName>{{ jenkins_agent_net_rg }}</virtualNetworkResourceGroupName>
        <subnetName>{{ jenkins_agent_subnet }}</subnetName>
        <usePrivateIP>true</usePrivateIP>
        <templateDisabled>false</templateDisabled>
        <templateStatusDetails></templateStatusDetails>
        <templateVerified>false</templateVerified>
        <executeInitScriptAsRoot>true</executeInitScriptAsRoot>
        <doNotUseMachineIfInitFails>true</doNotUseMachineIfInitFails>
        <retentionStrategy class="com.microsoft.azure.vmagent.AzureVMCloudRetensionStrategy">
          <idleTerminationMillis>3600000</idleTerminationMillis>
          <idleTerminationMinutes>60</idleTerminationMinutes>
        </retentionStrategy>
      </com.microsoft.azure.vmagent.AzureVMAgentTemplate>
    </vmTemplates>
    <deploymentTimeout>1200</deploymentTimeout>
    <approximateVirtualMachineCount>0</approximateVirtualMachineCount>
  </com.microsoft.azure.vmagent.AzureVMCloud>
</clouds>
